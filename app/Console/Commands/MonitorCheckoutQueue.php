<?php

namespace App\Console\Commands;

use App\Models\CheckoutQueue;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\DB;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—á–µ—Ä–µ–¥–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
 */
class MonitorCheckoutQueue extends Command
{
    protected $signature = 'checkout:monitor {session_id? : UUID —Å–µ—Å—Å–∏–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è}';
    protected $description = '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤';

    public function handle()
    {
        $sessionId = $this->argument('session_id');

        if ($sessionId) {
            $this->monitorSpecificSession($sessionId);
        } else {
            $this->monitorAllSessions();
        }
    }

    private function monitorSpecificSession(string $sessionId)
    {
        $this->info("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: {$sessionId}");
        $this->newLine();

        $checkout = CheckoutQueue::where('session_id', $sessionId)->first();

        if (!$checkout) {
            $this->error("‚ùå –°–µ—Å—Å–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
            return 1;
        }

        $this->table(
            ['–ü–∞—Ä–∞–º–µ—Ç—Ä', '–ó–Ω–∞—á–µ–Ω–∏–µ'],
            [
                ['–°–µ—Å—Å–∏—è', $checkout->session_id],
                ['–°—Ç–∞—Ç—É—Å', $checkout->status],
                ['–ü–æ–ø—ã—Ç–æ–∫', $checkout->attempts . '/' . $checkout->max_attempts],
                ['Telegram ID', $checkout->telegram_user_id],
                ['–ë–æ—Ç ID', $checkout->telegram_bot_id],
                ['–°–æ–∑–¥–∞–Ω–æ', $checkout->created_at->format('d.m.Y H:i:s')],
                ['ID –∑–∞–∫–∞–∑–∞', $checkout->order_id ?? '–ù–µ —Å–æ–∑–¥–∞–Ω'],
            ]
        );

        if ($checkout->status === 'failed' && $checkout->error_message) {
            $this->newLine();
            $this->warn("‚ö†Ô∏è –û—à–∏–±–∫–∞: {$checkout->error_message}");
        }

        if ($checkout->status === 'completed' && $checkout->order) {
            $this->newLine();
            $this->info("‚úÖ –ó–∞–∫–∞–∑ #{$checkout->order->order_number} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
        }

        if ($checkout->status === 'pending' || $checkout->status === 'processing') {
            $this->newLine();
            $this->warn("üîÑ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...");
        }

        return 0;
    }

    private function monitorAllSessions()
    {
        $this->info("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤");
        $this->newLine();

        // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        $stats = CheckoutQueue::select('status', DB::raw('COUNT(*) as count'))
            ->groupBy('status')
            ->get()
            ->pluck('count', 'status')
            ->toArray();

        $pending = $stats['pending'] ?? 0;
        $processing = $stats['processing'] ?? 0;
        $completed = $stats['completed'] ?? 0;
        $failed = $stats['failed'] ?? 0;
        $total = $pending + $processing + $completed + $failed;

        $this->table(
            ['–°—Ç–∞—Ç—É—Å', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'],
            [
                ['‚è≥ –í –æ—á–µ—Ä–µ–¥–∏', $pending],
                ['üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è', $processing],
                ['‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ', $completed],
                ['‚ùå –û—à–∏–±–æ–∫', $failed],
                ['‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ', '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ'],
                ['üìä –í—Å–µ–≥–æ', $total],
            ]
        );

        // –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏
        $recentSessions = CheckoutQueue::select('session_id', 'status', 'telegram_user_id', 'created_at')
            ->orderBy('created_at', 'desc')
            ->limit(5)
            ->get();

        if ($recentSessions->isNotEmpty()) {
            $this->newLine();
            $this->line("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:");
            $this->table(
                ['–°–µ—Å—Å–∏—è', '–°—Ç–∞—Ç—É—Å', 'Telegram ID', '–°–æ–∑–¥–∞–Ω–æ'],
                $recentSessions->map(fn($s) => [
                    substr($s->session_id, 0, 8) . '...',
                    $s->status,
                    $s->telegram_user_id,
                    $s->created_at->format('d.m.Y H:i:s'),
                ])
            );
        }

        if ($pending > 0 || $processing > 0) {
            $this->newLine();
            $this->warn("üîÑ –í –æ—á–µ—Ä–µ–¥–∏: {$pending}, –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {$processing}");
        } else {
            $this->newLine();
            $this->info("‚úÖ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞, –≤—Å–µ –∑–∞–∫–∞–∑—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!");
        }

        return 0;
    }
}
